#!/usr/bin/env python3
import ccxt
import logging

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

def test_okx_connection():
    print("üîç Testing OKX connection...")
    
    try:
        exchange = ccxt.okx({
            "enableRateLimit": True,
            "options": {"defaultType": "swap"},
            "sandbox": False
        })
        
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä—ã–Ω–∫–∏
        print("üìä Loading markets...")
        markets = exchange.load_markets()
        print(f"‚úÖ Loaded {len(markets)} markets")
        
        # –ü—Ä–æ–±—É–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ç–∏–∫–µ—Ä—ã –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö –ø–∞—Ä
        test_symbols = ["BTC/USDT:USDT", "ETH/USDT:USDT", "BNB/USDT:USDT"]
        print("üìà Testing price data...")
        
        for symbol in test_symbols:
            try:
                ticker = exchange.fetch_ticker(symbol)
                print(f"‚úÖ {symbol}: {ticker['last']}")
            except Exception as e:
                print(f"‚ùå {symbol}: {e}")
                
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
        print("üìä Testing historical data...")
        ohlcv = exchange.fetch_ohlcv("BTC/USDT:USDT", "15m", limit=10)
        print(f"‚úÖ BTC Historical data: {len(ohlcv)} bars")
        
    except Exception as e:
        print(f"‚ùå Connection failed: {e}")

if __name__ == "__main__":
    test_okx_connection()