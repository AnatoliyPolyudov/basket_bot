# main.py - –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø—É—Å–∫–∞
import time
import logging
import os
from pairs_core import PairAnalyzer
from telegram_bot import TelegramBot, SimplePositionsManager

logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    analyzer = PairAnalyzer()
    positions_manager = SimplePositionsManager()
    
    # Telegram –±–æ—Ç (—Ç–æ–∫–µ–Ω –∏–∑ .env)
    telegram_token = os.getenv('TELEGRAM_BOT_TOKEN', '8436652130:AAF6On0GJtRHfMZyqD3mpM57eXZfWofJeng')
    chat_id = os.getenv('TELEGRAM_CHAT_ID', '317217451')
    
    bot = TelegramBot(telegram_token, chat_id)
    
    logger.info("üöÄ Starting Simplified Pairs Monitor...")
    bot.send_message("ü§ñ Pairs Monitor Started!")
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
    while True:
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∞–Ω–∞–ª–∏–∑ –ø–∞—Ä
            report = analyzer.get_analysis_report()
            
            if 'error' not in report:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç
                bot.send_status_report(report, positions_manager.get_open_positions())
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–∏–≥–Ω–∞–ª—ã
                for pair_data in report['pairs_data']:
                    signal = pair_data.get('signal')
                    if signal not in ['HOLD', 'NO_DATA']:
                        bot.send_signal_alert(pair_data)
            
            # –ñ–¥–µ–º –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º
            time.sleep(600)  # 10 –º–∏–Ω—É—Ç
            
        except KeyboardInterrupt:
            logger.info("üõë Monitor stopped by user")
            bot.send_message("üõë Pairs Monitor Stopped")
            break
        except Exception as e:
            logger.error(f"‚ùå Error in main loop: {e}")
            time.sleep(60)

if __name__ == "__main__":
    main()
