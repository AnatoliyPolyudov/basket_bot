from observer import Observer
import logging

logging.basicConfig(level=logging.WARNING)
logger = logging.getLogger(__name__)

class OKXBasketTrader(Observer):
    def __init__(self, paper_trading=True, max_exposure=1000):
        self.paper_trading = paper_trading
        self.max_exposure = max_exposure
        self.current_positions = {}  # üÜï –§–æ—Ä–º–∞—Ç: {pair_name: {signal: str, size: float}}

    def update(self, data):
        """
        –ú–µ—Ç–æ–¥ Observer: –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –∫–∞–∂–¥–æ–º –Ω–æ–≤–æ–º —Å–∏–≥–Ω–∞–ª–µ –æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∞.
        """
        # üÜï –û–ë–†–ê–ë–ê–¢–´–í–ê–ï–ú –î–ê–ù–ù–´–ï –û–¢ R-–ü–û–î–•–û–î–ê
        pairs_data = data.get('pairs_data', [])
        
        for pair_data in pairs_data:
            signal = pair_data.get("signal")
            pair_name = pair_data.get("pair_name")
            
            if signal and signal != "HOLD" and signal != "NO DATA" and signal != "NO TRADE - NOT STATIONARY":
                self.execute_signal(signal, pair_data, pair_name)

    def execute_signal(self, signal, data, pair_name):
        """
        –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏–≥–Ω–∞–ª–∞ –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø–∞—Ä—ã.
        """
        if self.paper_trading:
            logger.debug(f"[PAPER TRADING] Pair {pair_name}: Signal received: {signal}")
        else:
            logger.info(f"[REAL TRADING] Pair {pair_name}: Would execute: {signal}")

    # --- –ú–µ—Ç–æ–¥—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ ---
    def open_position(self, signal: str, pair_name: str, size=None):
        if size is None:
            size = self.max_exposure / 4  # üÜï –†–∞—Å–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞–ø–∏—Ç–∞–ª –ø–æ –ø–∞—Ä–∞–º
        
        # üÜï –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–∞—Ä–µ
        self.current_positions[pair_name] = {
            'signal': signal,
            'size': size,
            'pair_name': pair_name
        }
        logger.info(f"‚úÖ [PAPER] OPENED: {pair_name} - {signal} with size {size}")

    def close_position(self, signal: str, pair_name: str):
        if pair_name in self.current_positions:
            position = self.current_positions[pair_name]
            del self.current_positions[pair_name]
            logger.info(f"‚úÖ [PAPER] CLOSED: {pair_name} - {position['signal']}")
        else:
            logger.warning(f"‚ö†Ô∏è [PAPER] No open position to close for {pair_name}")